{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5929,"status":"ok","timestamp":1686913265106,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"h39HxTrUoUtS","outputId":"1163c385-ca36-4e07-ca36-eef825593eb1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting segmentation-models\n","  Downloading segmentation_models-1.0.1-py3-none-any.whl (33 kB)\n","Collecting keras-applications<=1.0.8,>=1.0.7 (from segmentation-models)\n","  Downloading Keras_Applications-1.0.8-py3-none-any.whl (50 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.7/50.7 kB\u001b[0m \u001b[31m5.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting image-classifiers==1.0.0 (from segmentation-models)\n","  Downloading image_classifiers-1.0.0-py3-none-any.whl (19 kB)\n","Collecting efficientnet==1.0.0 (from segmentation-models)\n","  Downloading efficientnet-1.0.0-py3-none-any.whl (17 kB)\n","Requirement already satisfied: scikit-image in /usr/local/lib/python3.10/dist-packages (from efficientnet==1.0.0->segmentation-models) (0.19.3)\n","Requirement already satisfied: numpy>=1.9.1 in /usr/local/lib/python3.10/dist-packages (from keras-applications<=1.0.8,>=1.0.7->segmentation-models) (1.22.4)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.10/dist-packages (from keras-applications<=1.0.8,>=1.0.7->segmentation-models) (3.8.0)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (1.10.1)\n","Requirement already satisfied: networkx>=2.2 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (3.1)\n","Requirement already satisfied: pillow!=7.1.0,!=7.1.1,!=8.3.0,>=6.1.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (8.4.0)\n","Requirement already satisfied: imageio>=2.4.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (2.25.1)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (2023.4.12)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (1.4.1)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation-models) (23.1)\n","Installing collected packages: keras-applications, image-classifiers, efficientnet, segmentation-models\n","Successfully installed efficientnet-1.0.0 image-classifiers-1.0.0 keras-applications-1.0.8 segmentation-models-1.0.1\n"]}],"source":["!pip install -U segmentation-models"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4339,"status":"ok","timestamp":1686913269431,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"rDx6KFGroeOa","outputId":"4ab9d78b-2e77-43a7-cd87-9fb34f6f3614"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting patchify\n","  Downloading patchify-0.2.3-py3-none-any.whl (6.6 kB)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from patchify) (1.22.4)\n","Installing collected packages: patchify\n","Successfully installed patchify-0.2.3\n"]}],"source":["!pip install patchify"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18384,"status":"ok","timestamp":1686913287804,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"OWvITJJao4su","outputId":"a4552e58-9f59-42e2-cd1d-c20fb13adc49"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting gradio\n","  Downloading gradio-3.35.2-py3-none-any.whl (19.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m19.7/19.7 MB\u001b[0m \u001b[31m72.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting aiofiles (from gradio)\n","  Downloading aiofiles-23.1.0-py3-none-any.whl (14 kB)\n","Collecting aiohttp (from gradio)\n","  Downloading aiohttp-3.8.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m68.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: altair>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (4.2.2)\n","Collecting fastapi (from gradio)\n","  Downloading fastapi-0.97.0-py3-none-any.whl (56 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m57.0/57.0 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting ffmpy (from gradio)\n","  Downloading ffmpy-0.3.0.tar.gz (4.8 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting gradio-client>=0.2.7 (from gradio)\n","  Downloading gradio_client-0.2.7-py3-none-any.whl (288 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m288.4/288.4 kB\u001b[0m \u001b[31m31.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting httpx (from gradio)\n","  Downloading httpx-0.24.1-py3-none-any.whl (75 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.4/75.4 kB\u001b[0m \u001b[31m9.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting huggingface-hub>=0.14.0 (from gradio)\n","  Downloading huggingface_hub-0.15.1-py3-none-any.whl (236 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m236.8/236.8 kB\u001b[0m \u001b[31m25.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from gradio) (3.1.2)\n","Requirement already satisfied: markdown-it-py[linkify]>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.2.0)\n","Requirement already satisfied: markupsafe in /usr/local/lib/python3.10/dist-packages (from gradio) (2.1.2)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from gradio) (3.7.1)\n","Collecting mdit-py-plugins<=0.3.3 (from gradio)\n","  Downloading mdit_py_plugins-0.3.3-py3-none-any.whl (50 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.5/50.5 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from gradio) (1.22.4)\n","Collecting orjson (from gradio)\n","  Downloading orjson-3.9.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (136 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m137.0/137.0 kB\u001b[0m \u001b[31m17.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from gradio) (1.5.3)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from gradio) (8.4.0)\n","Requirement already satisfied: pydantic in /usr/local/lib/python3.10/dist-packages (from gradio) (1.10.7)\n","Collecting pydub (from gradio)\n","  Downloading pydub-0.25.1-py2.py3-none-any.whl (32 kB)\n","Requirement already satisfied: pygments>=2.12.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.14.0)\n","Collecting python-multipart (from gradio)\n","  Downloading python_multipart-0.0.6-py3-none-any.whl (45 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.7/45.7 kB\u001b[0m \u001b[31m5.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from gradio) (6.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from gradio) (2.27.1)\n","Collecting semantic-version (from gradio)\n","  Downloading semantic_version-2.10.0-py2.py3-none-any.whl (15 kB)\n","Collecting uvicorn>=0.14.0 (from gradio)\n","  Downloading uvicorn-0.22.0-py3-none-any.whl (58 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting websockets>=10.0 (from gradio)\n","  Downloading websockets-11.0.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (129 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m129.9/129.9 kB\u001b[0m \u001b[31m14.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair>=4.2.0->gradio) (0.4)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair>=4.2.0->gradio) (4.3.3)\n","Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair>=4.2.0->gradio) (0.12.0)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from gradio-client>=0.2.7->gradio) (2023.4.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from gradio-client>=0.2.7->gradio) (23.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from gradio-client>=0.2.7->gradio) (4.5.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.14.0->gradio) (3.12.0)\n","Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.14.0->gradio) (4.65.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py[linkify]>=2.0.0->gradio) (0.1.2)\n","Collecting linkify-it-py<3,>=1 (from markdown-it-py[linkify]>=2.0.0->gradio)\n","  Downloading linkify_it_py-2.0.2-py3-none-any.whl (19 kB)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->gradio) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->gradio) (2022.7.1)\n","Requirement already satisfied: click>=7.0 in /usr/local/lib/python3.10/dist-packages (from uvicorn>=0.14.0->gradio) (8.1.3)\n","Collecting h11>=0.8 (from uvicorn>=0.14.0->gradio)\n","  Downloading h11-0.14.0-py3-none-any.whl (58 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->gradio) (23.1.0)\n","Requirement already satisfied: charset-normalizer<4.0,>=2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->gradio) (2.0.12)\n","Collecting multidict<7.0,>=4.5 (from aiohttp->gradio)\n","  Downloading multidict-6.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (114 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.5/114.5 kB\u001b[0m \u001b[31m14.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting async-timeout<5.0,>=4.0.0a3 (from aiohttp->gradio)\n","  Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n","Collecting yarl<2.0,>=1.0 (from aiohttp->gradio)\n","  Downloading yarl-1.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (268 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m268.8/268.8 kB\u001b[0m \u001b[31m27.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting frozenlist>=1.1.1 (from aiohttp->gradio)\n","  Downloading frozenlist-1.3.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (149 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.6/149.6 kB\u001b[0m \u001b[31m16.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting aiosignal>=1.1.2 (from aiohttp->gradio)\n","  Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n","Collecting starlette<0.28.0,>=0.27.0 (from fastapi->gradio)\n","  Downloading starlette-0.27.0-py3-none-any.whl (66 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.0/67.0 kB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx->gradio) (2022.12.7)\n","Collecting httpcore<0.18.0,>=0.15.0 (from httpx->gradio)\n","  Downloading httpcore-0.17.2-py3-none-any.whl (72 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m72.5/72.5 kB\u001b[0m \u001b[31m8.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: idna in /usr/local/lib/python3.10/dist-packages (from httpx->gradio) (3.4)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from httpx->gradio) (1.3.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->gradio) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->gradio) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->gradio) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->gradio) (1.4.4)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->gradio) (3.0.9)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->gradio) (1.26.15)\n","Requirement already satisfied: anyio<5.0,>=3.0 in /usr/local/lib/python3.10/dist-packages (from httpcore<0.18.0,>=0.15.0->httpx->gradio) (3.6.2)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair>=4.2.0->gradio) (0.19.3)\n","Collecting uc-micro-py (from linkify-it-py<3,>=1->markdown-it-py[linkify]>=2.0.0->gradio)\n","  Downloading uc_micro_py-1.0.2-py3-none-any.whl (6.2 kB)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas->gradio) (1.16.0)\n","Building wheels for collected packages: ffmpy\n","  Building wheel for ffmpy (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ffmpy: filename=ffmpy-0.3.0-py3-none-any.whl size=4694 sha256=4b90054b160c5000beffe629fe5a13a874c5ff7b1bf6df8f6e65464c4f057672\n","  Stored in directory: /root/.cache/pip/wheels/0c/c2/0e/3b9c6845c6a4e35beb90910cc70d9ac9ab5d47402bd62af0df\n","Successfully built ffmpy\n","Installing collected packages: pydub, ffmpy, websockets, uc-micro-py, semantic-version, python-multipart, orjson, multidict, h11, frozenlist, async-timeout, aiofiles, yarl, uvicorn, starlette, mdit-py-plugins, linkify-it-py, huggingface-hub, httpcore, aiosignal, httpx, fastapi, aiohttp, gradio-client, gradio\n","Successfully installed aiofiles-23.1.0 aiohttp-3.8.4 aiosignal-1.3.1 async-timeout-4.0.2 fastapi-0.97.0 ffmpy-0.3.0 frozenlist-1.3.3 gradio-3.35.2 gradio-client-0.2.7 h11-0.14.0 httpcore-0.17.2 httpx-0.24.1 huggingface-hub-0.15.1 linkify-it-py-2.0.2 mdit-py-plugins-0.3.3 multidict-6.0.4 orjson-3.9.1 pydub-0.25.1 python-multipart-0.0.6 semantic-version-2.10.0 starlette-0.27.0 uc-micro-py-1.0.2 uvicorn-0.22.0 websockets-11.0.3 yarl-1.9.2\n"]}],"source":["!pip install gradio"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":4760,"status":"ok","timestamp":1686913292535,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"EzGQ2-hHogNP"},"outputs":[],"source":["import cv2\n","from PIL import Image\n","import numpy as np\n","from patchify import patchify\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras.models import load_model\n","from patchify import unpatchify"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":584,"status":"ok","timestamp":1686913293108,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"ahU0Z4h3oiJB","outputId":"56ee08e1-8e56-4660-8bb6-4d29c5540c31"},"outputs":[{"output_type":"stream","name":"stdout","text":["env: SM_FRAMEWORK=tf.keras\n","Segmentation Models: using `tf.keras` framework.\n"]}],"source":["%env SM_FRAMEWORK=tf.keras\n","import segmentation_models as sm"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1686913293109,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"PO-mB3C4onHv"},"outputs":[],"source":["from keras import backend as k"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":1249,"status":"ok","timestamp":1686913294351,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"3Uam3SkSpDTR"},"outputs":[],"source":["import gradio as gr"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1686913294353,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"j_XS4Wa-opKF"},"outputs":[],"source":["minmaxscaler = MinMaxScaler()"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1686913294354,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"HUtH3lmWorNT"},"outputs":[],"source":["def jaccard_coef(y_true, y_pred):\n","  y_true_flatten = k.flatten(y_true)\n","  y_pred_flatten = k.flatten(y_pred)\n","  intersection = k.sum(y_true_flatten * y_pred_flatten)\n","  final_coef_value = (intersection + 1.0) / (k.sum(y_true_flatten) + k.sum(y_pred_flatten) - intersection + 1.0)\n","  return final_coef_value"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1686913294356,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"PPo9ImL5osDb"},"outputs":[],"source":["weights = [0.166, 0.166, 0.166, 0.166, 0.166, 0.166]\n","dice_loss = sm.losses.DiceLoss(class_weights=weights)\n","focal_loss = sm.losses.CategoricalFocalLoss()\n","total_loss = dice_loss + (1 * focal_loss)"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":4982,"status":"ok","timestamp":1686913299325,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"lkWXpqzXotut"},"outputs":[],"source":["model = load_model(\"/content/drive/MyDrive/Colab Notebooks/imagesattelitesegmentation500.h5\",\n","                   custom_objects=({'dice_loss_plus_1focal_loss': total_loss,\n","                                    'jaccard_coef': jaccard_coef}), compile=True, safe_mode=True)"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":17,"status":"ok","timestamp":1686913299326,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"OWoWG2rDtpWY"},"outputs":[],"source":["# from google.colab import drive\n","# drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1686913299327,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"3cfO6xBfovlv"},"outputs":[],"source":["def patched_image(image):\n","    image = np.array(image)\n","    patched_image_list = []\n","    image_patch_size = 256\n","    size_x = (image.shape[1]//image_patch_size) * image_patch_size\n","    size_y = (image.shape[0]//image_patch_size) * image_patch_size\n","    image = Image.fromarray(image)\n","    image = image.crop((0, 0, size_x, size_y))\n","    image = np.array(image)\n","    patched_images = patchify(image, (image_patch_size, image_patch_size, 3), step=image_patch_size)\n","\n","    for i in range(patched_images.shape[0]):\n","        for j in range(patched_images.shape[1]):\n","            individual_patched_image = patched_images[i, j]\n","            individual_patched_image = minmaxscaler.fit_transform(individual_patched_image.reshape(-1, individual_patched_image.shape[-1])).reshape(individual_patched_image.shape)\n","            individual_patched_image = individual_patched_image[0]\n","            patched_image_list.append(individual_patched_image)\n","    return patched_image_list"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1686913299328,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"PKv8vNYaIoUx"},"outputs":[],"source":["# def predict_patched_images(patched_images):\n","#     predicted_images = []\n","#     for image in patched_images:\n","#         # Normalize the image\n","#         image = image.astype(\"float32\") / 255.0\n","#         # Make the prediction\n","#         predicted_image = model.predict(np.expand_dims(image, axis=0))\n","#         # Denormalize the image\n","#         predicted_image = (predicted_image[0] * 255.0).astype(\"uint8\")\n","#         predicted_images.append(predicted_image)\n","#     return predicted_images"]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":447,"status":"ok","timestamp":1686913299762,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"Tfd5sdi6oygQ","colab":{"base_uri":"https://localhost:8080/"},"outputId":"0d6030c1-4f3f-4788-f365-90074c0479d2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(661, 1307, 3)"]},"metadata":{},"execution_count":15}],"source":["image = Image.open('/content/drive/MyDrive/Colab Notebooks/Images_test/iut.jpeg')\n","image = np.array(image)\n","image.shape"]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1686913576405,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"KyfKTWIDyHd1"},"outputs":[],"source":["# def process_input_image(image_source):\n","\n","#   predicted_image_list = []\n","#   patched_image_list = patched_image(image_source)\n","\n","#   for image in patched_image_list:\n","#     image = np.expand_dims(image, 0)\n","#     predict = model.predict(image)\n","#     predicted_image = np.argmax(predict, axis=3)\n","#     predicted_image = predicted_image[0, :, :]\n","#     predicted_image = predicted_image * 50\n","#     predicted_image_rgb = cv2.merge([predicted_image, predicted_image, predicted_image])\n","#     #predicted_image_rgb = cv2.cvtColor(predicted_image_rgb, cv2.COLOR_GRAY2RGB)\n","#     predicted_image_list.append(predicted_image_rgb)\n","\n","#     #predicted_image_array = np.array(predicted_image_list)\n","#     #reconstructed_image = unpatchify(predicted_image_array, new_image.shape)\n","#     #return reconstructed_image\n","#   return \"Predicted Image\", predicted_image_list[0], predicted_image_list[1], predicted_image_list[2], predicted_image_list[3], predicted_image_list[4], predicted_image_list[5]\n","\n","\n","def process_input_image(image_source):\n","    predicted_image_list = []\n","    patched_image_list = patched_image(image_source)\n","\n","    for image in patched_image_list:\n","        i = 1\n","        name = \"/content/predict/output\" + str(i)\n","        image = np.expand_dims(image, 0)\n","        predict = model.predict(image)\n","        predicted_image = np.argmax(predict, axis=3)\n","        predicted_image = predicted_image[0, :, :]\n","        predicted_image = predicted_image * 50\n","        #predicted_image_rgb = cv2.merge([predicted_image, predicted_image, predicted_image])\n","\n","        predicted_image_list.append(predicted_image)\n","        plt.imshow(predicted_image)\n","        plt.savefig(name)\n","        i += 1\n","    # Convert each predicted image to color if necessary\n","    # for i in range(len(predicted_image_list)):\n","    #     if predicted_image_list[i].shape[-1] == 1:\n","    #         predicted_image_list[i] = cv2.cvtColor(predicted_image_list[i], cv2.COLOR_GRAY2RGB)\n","\n","    return \"Predicted Image\", predicted_image_list[0], predicted_image_list[1], predicted_image_list[2], predicted_image_list[3], predicted_image_list[4], predicted_image_list[5]"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1686913300209,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"decODuzqOo0P"},"outputs":[],"source":["def update_output_components(predicted_images, output_label, *image_outputs):\n","    output_label.set_label(\"Images prédites:\")\n","    for i, img in enumerate(predicted_images):\n","        if i < len(image_outputs):\n","          image_outputs[i].update_image(img)\n","        else:\n","            break"]},{"cell_type":"code","execution_count":29,"metadata":{"executionInfo":{"elapsed":463,"status":"ok","timestamp":1686916429294,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"},"user_tz":-60},"id":"QEMQGVt7uwS-"},"outputs":[],"source":["my_app = gr.Blocks()\n","with my_app:\n","  gr.Markdown(\"Image preprocessing Application UI with Gradio\")\n","  with gr.Tabs():\n","    with gr.TabItem(\"Select your image\"):\n","      with gr.Row():\n","        with gr.Column():\n","          image_source = gr.Image(label=\"Please select source image\")\n","          source_image_loader = gr.Button(\"Traiter l'image\")\n","          # predicted_images = gr.List()\n","        with gr.Column():\n","          output_label = gr.Label(label=\"Image Info\")\n","          #image_output = gr.Image(label=\"Image output\", image_mode=\"BGR\")\n","          with gr.Row():\n","            with gr.Column():\n","              with gr.Row():\n","                image_output1 = gr.Image(label=\"Image output\", image_mode=\"RGB\")\n","                image_output2 = gr.Image(label=\"Image output\", image_mode=\"RGB\")\n","                image_output3 = gr.Image(label=\"Image output\", image_mode=\"RGB\")\n","              with gr.Row():\n","                image_output4 = gr.Image(label=\"Image output\", image_mode=\"RGB\")\n","                image_output5 = gr.Image(label=\"Image output\", image_mode=\"RGB\")\n","                image_output6 = gr.Image(label=\"Image output\", image_mode=\"RGB\")\n","\n","\n","    source_image_loader.click(\n","      process_input_image,\n","      [image_source],\n","      [\n","        output_label,\n","        #image_output,\n","        image_output1,\n","        image_output2,\n","        image_output3,\n","        image_output6,\n","        image_output5,\n","        image_output4\n","      ]\n","    )"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":981},"id":"ASGw2WGvtcG1","outputId":"a8fbfa30-dad9-477a-d7f8-414435e464be","executionInfo":{"status":"ok","timestamp":1686917341409,"user_tz":-60,"elapsed":828969,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"}}},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n","Note: opening Chrome Inspector may crash demo inside Colab notebooks.\n","\n","To create a public link, set `share=True` in `launch()`.\n"]},{"data":{"application/javascript":["(async (port, path, width, height, cache, element) => {\n","                        if (!google.colab.kernel.accessAllowed && !cache) {\n","                            return;\n","                        }\n","                        element.appendChild(document.createTextNode(''));\n","                        const url = await google.colab.kernel.proxyPort(port, {cache});\n","\n","                        const external_link = document.createElement('div');\n","                        external_link.innerHTML = `\n","                            <div style=\"font-family: monospace; margin-bottom: 0.5rem\">\n","                                Running on <a href=${new URL(path, url).toString()} target=\"_blank\">\n","                                    https://localhost:${port}${path}\n","                                </a>\n","                            </div>\n","                        `;\n","                        element.appendChild(external_link);\n","\n","                        const iframe = document.createElement('iframe');\n","                        iframe.src = new URL(path, url).toString();\n","                        iframe.height = height;\n","                        iframe.allow = \"autoplay; camera; microphone; clipboard-read; clipboard-write;\"\n","                        iframe.width = width;\n","                        iframe.style.border = 0;\n","                        element.appendChild(iframe);\n","                    })(7860, \"/\", \"100%\", 500, false, window.element)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{},"output_type":"display_data"},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","Keyboard interruption in main thread... closing server.\n"]},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":30}],"source":["my_app.launch(debug=True)"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"xbNpoIM54wFU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686913567158,"user_tz":-60,"elapsed":355,"user":{"displayName":"Darius- TECH","userId":"10201818537550587549"}},"outputId":"f0c49a1a-2c30-4d5c-a185-871f1ab6e3ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["Closing server running on port: 7860\n"]}],"source":["my_app.close()"]}],"metadata":{"accelerator":"GPU","colab":{"machine_shape":"hm","provenance":[],"mount_file_id":"1a027qhKljWe6TWuOdysZ2sBUAsxGWRwE","authorship_tag":"ABX9TyNPpyWV+SAvB7zjGhnAkk4n"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}